{"version":3,"sources":["firebase.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","InputStyle","marginTop","maxHeight","minHeight","maxWidth","minWidth","resize","padding","boxSizing","fontSize","headline","textAlign","fontWeight","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","body","isInEditMode","isCancle","key","notes","buttonName","noteId","handleChange","bind","assertThisInitialized","handleSubmit","renderNotes","cancleButton","_this2","console","log","database","ref","on","snapshot","items","val","newState","item","push","id","setState","itemId","concat","remove","e","itemsRef","preventDefault","note","set","componentDidMount","_this3","react_default","a","createElement","className","Button","color","onClick","changeCancle","_this4","_","map","style","renderHtml","goToEdit","removeItem","renderNotesEditView","renderNotesDefaultView","_this5","onSubmit","onChange","target","value","type","name","placeholder","required","lib_default","height","width","modules","formats","marginBottom","Component","toolbar","header","font","size","list","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.194f2ee5.chunk.js","sourcesContent":["import * as firebase from 'firebase'\n  // Initialize Firebase as my data base\n  var config = {\n    apiKey: \"AIzaSyBCXb3cHEGAVTStjT5R4-j2xK_Kt7T_kk8\",\n    authDomain: \"agodanote.firebaseapp.com\",\n    databaseURL: \"https://agodanote.firebaseio.com\",\n    projectId: \"agodanote\",\n    storageBucket: \"\",\n    messagingSenderId: \"266478308458\"\n  };\n\nfirebase.initializeApp(config);\n\nexport default firebase;","// Developed by Sasithorn Hannarong\n// Home Test for Graduate BE Engineer\n\nimport React, { Component } from 'react';\nimport firebase from '../firebase';\n\nimport _ from 'lodash';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport renderHtml from 'react-render-html';\nimport { Button } from 'reactstrap';\n\n//Ref: https://css-tricks.com/intro-firebase-react/\n\nconst InputStyle = {\n\t\t\tmarginTop: '10px',\n\t\t\tmaxHeight:'75px',\n\t\t\tminHeight:'30px',\n\t\t\tmaxWidth :'900px',\n\t\t\tminWidth :'650px',\n\t\t\t  resize:'none',\n\t\t\t  padding:'9px',\n\t\t\t  boxSizing:'border-box',\n\t\t\t  fontSize:'15px'\n};\n\nconst headline = {\n\ttextAlign: 'center',\n\tfontWeight: 'bold',\n\tmarginTop: 20,\n};\n\nclass App extends Component {\n    constructor(props) {\n\t  super(props);\n\t  //state\n\t  this.state = {\n\t\t  title: '',\n\t\t  body: '',\n\t\t  isInEditMode: false,\n\t\t  isCancle: false,\n\t\t  key: '',\n\t\t  notes: {},\n\t\t  buttonName: 'Post'\n\t  };\n\t  this.noteId = props.noteId; \n\t\t\n\t  //bind functions to constructor\n\t  this.handleChange = this.handleChange.bind(this)\n\t  this.handleSubmit = this.handleSubmit.bind(this)\n\t  this.renderNotes = this.renderNotes.bind(this)\n\t  this.cancleButton = this.cancleButton.bind(this)\n\t}\n\t\t\n\t//Use lifecycle to get notes\n\tcomponentDidMount() {\n\t\tconsole.log(\"componentDidMount\");\n\t\tconst itemsRef = firebase.database().ref('notes');\n\t\titemsRef.on('value', snapshot => {\n\t\t\tlet items = snapshot.val();\n\t\t\tlet newState = [];\n    \t\tfor (let item in items) {\n      \t\t\tnewState.push({\n\t\t\t\tid: item,\n\t\t\t\ttitle: items[item].title,\n\t\t\t\tbody:items[item].body,\n        \t\tnotes: items[item].notes\n\t\t\t\t});\n    \t\t}\n\t\t\t//Save the state\n\t\t\tthis.setState({notes: newState});\n\t\t});\n\t}\n\t\n\tremoveItem(itemId) {\n  \t\tconst itemRef = firebase.database().ref(`/notes/${itemId}`);\n  \t\titemRef.remove();\n\t}\n\t\n\thandleChange(e) {\n\t\tthis.setState({\n\t\t\tbody : e\n\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\t//If isInEditMode = false then do the regular submit by creat a new note\n\t\tif (!this.state.isInEditMode)\n\t\t{\t//Disable the reload default first\n\t\t\te.preventDefault();\n\n\t\t\t//Create path to firebase\n\t\t\tconst itemsRef = firebase.database().ref('notes');\n\n\t\t\t//Create Note object\n\t\t\tconst note = {\n\t\t\t\ttitle: this.state.title,\n\t\t\t\tbody: this.state.body\n\t\t\t}\n\t\t\titemsRef.push(note);\n\n\t\t\tthis.setState({\n\t\t\t\t\ttitle: '',\n\t\t\t\t\tbody: ''\n\t\t\t});\n\t\t} else {\n\t\t//If isInEditMode = true then we won't create a new node, instead we just update the exist note\n\n\t\t\tvar itemId = this.state.key\n\t\t\tconst itemsRef = firebase.database().ref(`/notes/${itemId}`);\n\t\t\t\n\t\t\t//if !cancle mean the user didn't click on cancle bt so we update the note to the new edited one\n\t\t\tif (!this.state.isCancle) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconsole.log(\"Update!\");\n\t\t\t\t//Create Note object and save to the database\n\t\t\t\tconst note = {\n\t\t\t\t\ttitle: this.state.title,\n\t\t\t\t\tbody: this.state.body\n\t\t\t\t}\n\t\t\t\titemsRef.set(note);\n\t\t\t}\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\ttitle: '',\n\t\t\t\tbody: '',\n\t\t\t\tisInEditMode: false,\n\t\t\t\tbuttonName: 'Post',\n\t\t\t\tisCancle: false\n\t\t\t});\n\t\t\tthis.componentDidMount();\n\t\t}\n\t}\n\t\n\trenderNotesEditView(e) {\n\t\tconst note = {\n\t\t\ttitle: this.state.title,\n\t\t\tbody: this.state.body\n\t\t}\n\t}\n\t\n\tgoToEdit (note) {\n\t\tthis.setState({\n\t\t\ttitle : note.title,\n\t\t\tbody : note.body,\n\t\t\tisInEditMode: !this.state.isInEditMode,\n\t\t\tnotes: note.notes,\n\t\t\tkey: note.id,\n\t\t\tbuttonName: 'Edit'\n\t\t});\n\t}\n\t\t\n\tchangeCancle() {\n\t\tthis.state.isCancle = true\n\t\tthis.handleSubmit()\n\t}\n\t//onClick={() => this.changeCancle()}\n\tcancleButton() {\n\t\tif(this.state.isInEditMode) {\t\n\t\treturn (\n\t\t\t <div className = \"container-fluid\">\n\t\t\t\t<div className = \"row\">\n\t\t\t\t\t<div className = \"from-group\">\n\t\t\t\t\t<Button className = \"btn btn-primary col-sm-12\" color=\"danger\" onClick={() => this.changeCancle()}>Cancle</Button>{' '}\n\t\t\t\t  \t</div>\n\t\t\t\t</div>\n\t\t\t </div>\n\t\t\t)\t\n\t\t}\t\n\t}\n\t\n\t\n\trenderNotesDefaultView() {\n\t\treturn _.map(this.state.notes, (note, key) => {\n\t\t\treturn (\n\t\t\t<div key={note.id} style={{marginTop: 150}}>\n\t\t\t\t<h2 style={{fontWeight: 'bold'}}>{note.title}</h2>\n\t\t\t\t<div>{renderHtml(note.body)}</div>\n\t\t\t\t<div className=\"text-right\" style={{padding:'15px'}}>\n\t\t\t\t\t<Button color=\"info\" onClick = {() => this.goToEdit(note)}>Edit</Button>{''}\n\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t<Button color=\"danger\"  onClick={() => this.removeItem(note.id)}>Delete</Button>{' '}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t\t});\t\t\n\t}\n\t\n\trenderNotes() {\n\t\treturn this.state.isInEditMode ? this.renderNotesEditView() : this.renderNotesDefaultView()\n\t}\n \n  render() {\n\t //return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView()\n\t  return (\n      <div className = \"container-fluid\">\n\t\t<div className = \"row\">\n\t\t  <div className = \"col-sm-6 col-sm-offset-3\">\n\t\t\t\t<form onSubmit = {this.handleSubmit}>\n\t\t\t\t\t<h1 style = {headline}>Agoda Takehometest Grad BE</h1>\n\t\t\t\t\t<div className = \"from-group\">\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tonChange = {(e) => {this.setState({title: e.target.value})}}\n\t\t\t\t\t\t\tstyle = {InputStyle}\n\t\t\t\t\t\t\tvalue = {this.state.title}\n\t\t\t\t\t\t\ttype = \"text\" name = \"title\" \n\t\t\t\t\t\t\tclassName = \"from-control no-border\" \n\t\t\t\t\t\t\tplaceholder = \"Note Title...\" required/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"from-group\">\n\t\t\t\t\t\t<ReactQuill \n\t\t\t\t\t\t\tstyle={{height: 300, width: 650, marginTop: '10px'}}\n\t\t\t\t\t\t\tmodules = {App.modules}\n\t\t\t\t\t\t\tformats={this.formats}\n\t\t\t\t\t\t\tonChange = {this.handleChange}\n\t\t\t\t\t\t\tvalue = {this.state.body}\n\t\t\t\t\t\t\tplaceholder = \"Edit your note here...\" required/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className = \"from-group\">\n\t\t\t\t\t\t<button className = \"btn btn-primary col-sm-12\" style={{marginTop: 80, marginBottom: 20 }}>{this.state.buttonName}</button>\n\t\t\t\t\t\t{this.cancleButton()}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t{this.renderNotes()}\n\t\t\t</div>\n\t\t</div>\n      </div>\n    );\t\n  }\n}\n\nApp.modules = {\n\ttoolbar: [\n\t\t[{'header' : '1'}, {'header' : '2'}, {'font' : []}],\n\t\t[{size:[]}],\n\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t[{'list': 'ordered'}, {'list' : 'bullet'}],\n\t\t['link', 'image', 'video'],\n\t\t['clean'],\n\t\t['code-block']\n\t]\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}